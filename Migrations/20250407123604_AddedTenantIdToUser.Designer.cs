// <auto-generated />
using System;
using CafeMenuWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeMenuWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407123604_AddedTenantIdToUser")]
    partial class AddedTenantIdToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeMenuWebApp.Models.Category", b =>
                {
                    b.Property<int>("CATEGORYID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CATEGORYID"));

                    b.Property<string>("CATEGORYNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("ISDELETED")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PARENTCATEGORYID")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("CATEGORYID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CATEGORYID = 1,
                            CATEGORYNAME = "Drinks",
                            CREATEDDATE = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/drinks.jpg",
                            TenantId = 1
                        },
                        new
                        {
                            CATEGORYID = 2,
                            CATEGORYNAME = "Hot Beverages",
                            CREATEDDATE = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/hot-beverages.jpg",
                            PARENTCATEGORYID = 1,
                            TenantId = 1
                        },
                        new
                        {
                            CATEGORYID = 3,
                            CATEGORYNAME = "Cold Beverages",
                            CREATEDDATE = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/cold-beverages.jpg",
                            PARENTCATEGORYID = 1,
                            TenantId = 1
                        },
                        new
                        {
                            CATEGORYID = 4,
                            CATEGORYNAME = "Desserts",
                            CREATEDDATE = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/desserts.jpg",
                            TenantId = 1
                        },
                        new
                        {
                            CATEGORYID = 5,
                            CATEGORYNAME = "Snacks",
                            CREATEDDATE = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/snacks.jpg",
                            TenantId = 1
                        },
                        new
                        {
                            CATEGORYID = 6,
                            CATEGORYNAME = "Drinks",
                            CREATEDDATE = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ISDELETED = false,
                            ImagePath = "/images/drinks.jpg",
                            TenantId = 2
                        });
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/espresso.jpg",
                            IsDeleted = false,
                            Price = 2.50m,
                            ProductName = "Espresso",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/cappuccino.jpg",
                            IsDeleted = false,
                            Price = 3.00m,
                            ProductName = "Cappuccino",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/iced_coffee.jpg",
                            IsDeleted = true,
                            Price = 3.50m,
                            ProductName = "Iced Coffee",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/lemonade.jpg",
                            IsDeleted = false,
                            Price = 2.75m,
                            ProductName = "Lemonade",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/chocolate_cake.jpg",
                            IsDeleted = false,
                            Price = 4.00m,
                            ProductName = "Chocolate Cake",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/cheesecake.jpg",
                            IsDeleted = false,
                            Price = 4.50m,
                            ProductName = "Cheesecake",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/french_fries.jpg",
                            IsDeleted = false,
                            Price = 3.00m,
                            ProductName = "French Fries",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/chicken_nuggets.jpg",
                            IsDeleted = false,
                            Price = 4.00m,
                            ProductName = "Chicken Nuggets",
                            TenantId = 1
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorUserId = 1,
                            ImagePath = "/images/tea.jpg",
                            IsDeleted = false,
                            Price = 2.00m,
                            ProductName = "Tea",
                            TenantId = 2
                        });
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.ProductProperty", b =>
                {
                    b.Property<int>("PRODUCTPROPERYID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PRODUCTPROPERYID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PRODUCTID")
                        .HasColumnType("int");

                    b.Property<int>("PROPERTYID")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("PRODUCTPROPERYID");

                    b.HasIndex("PRODUCTID");

                    b.HasIndex("PROPERTYID");

                    b.ToTable("ProductProperties");

                    b.HasData(
                        new
                        {
                            PRODUCTPROPERYID = 1,
                            IsDeleted = false,
                            PRODUCTID = 1,
                            PROPERTYID = 4,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 2,
                            IsDeleted = false,
                            PRODUCTID = 2,
                            PROPERTYID = 4,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 3,
                            IsDeleted = false,
                            PRODUCTID = 3,
                            PROPERTYID = 5,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 4,
                            IsDeleted = false,
                            PRODUCTID = 4,
                            PROPERTYID = 8,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 5,
                            IsDeleted = false,
                            PRODUCTID = 5,
                            PROPERTYID = 6,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 6,
                            IsDeleted = false,
                            PRODUCTID = 6,
                            PROPERTYID = 7,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 7,
                            IsDeleted = false,
                            PRODUCTID = 7,
                            PROPERTYID = 2,
                            TenantId = 1
                        },
                        new
                        {
                            PRODUCTPROPERYID = 8,
                            IsDeleted = false,
                            PRODUCTID = 8,
                            PROPERTYID = 2,
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.Property", b =>
                {
                    b.Property<int>("PROPERTYID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PROPERTYID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("VALUE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PROPERTYID");

                    b.HasIndex("ProductId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PROPERTYID = 1,
                            IsDeleted = false,
                            KEY = "Size",
                            TenantId = 1,
                            VALUE = "Small"
                        },
                        new
                        {
                            PROPERTYID = 2,
                            IsDeleted = false,
                            KEY = "Size",
                            TenantId = 1,
                            VALUE = "Medium"
                        },
                        new
                        {
                            PROPERTYID = 3,
                            IsDeleted = false,
                            KEY = "Size",
                            TenantId = 1,
                            VALUE = "Large"
                        },
                        new
                        {
                            PROPERTYID = 4,
                            IsDeleted = false,
                            KEY = "Temperature",
                            TenantId = 1,
                            VALUE = "Hot"
                        },
                        new
                        {
                            PROPERTYID = 5,
                            IsDeleted = false,
                            KEY = "Temperature",
                            TenantId = 1,
                            VALUE = "Cold"
                        },
                        new
                        {
                            PROPERTYID = 6,
                            IsDeleted = false,
                            KEY = "Flavor",
                            TenantId = 1,
                            VALUE = "Chocolate"
                        },
                        new
                        {
                            PROPERTYID = 7,
                            IsDeleted = false,
                            KEY = "Flavor",
                            TenantId = 1,
                            VALUE = "Vanilla"
                        },
                        new
                        {
                            PROPERTYID = 8,
                            IsDeleted = false,
                            KEY = "Flavor",
                            TenantId = 1,
                            VALUE = "Fresh"
                        });
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.User", b =>
                {
                    b.Property<int>("USERID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("USERID"));

                    b.Property<byte[]>("HASHPASSWORD")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SALTPASSWORD")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SURNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USERID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            USERID = 1,
                            HASHPASSWORD = new byte[] { 253, 64, 209, 93, 68, 177, 83, 129, 69, 17, 229, 24, 113, 64, 205, 165, 20, 89, 2, 86, 50, 111, 197, 104, 31, 202, 197, 79, 19, 145, 29, 32 },
                            NAME = "Admin",
                            SALTPASSWORD = new byte[] { 219, 18, 144, 114, 204, 127, 112, 174, 98, 193, 7, 138, 133, 213, 102, 123 },
                            SURNAME = "User",
                            TenantId = 1,
                            USERNAME = "admin"
                        });
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.Product", b =>
                {
                    b.HasOne("CafeMenuWebApp.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.ProductProperty", b =>
                {
                    b.HasOne("CafeMenuWebApp.Models.Product", "Product")
                        .WithMany("ProductProperties")
                        .HasForeignKey("PRODUCTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CafeMenuWebApp.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PROPERTYID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.Property", b =>
                {
                    b.HasOne("CafeMenuWebApp.Models.Product", null)
                        .WithMany("Properties")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("CafeMenuWebApp.Models.Product", b =>
                {
                    b.Navigation("ProductProperties");

                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
